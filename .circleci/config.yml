version: 2.1
orbs:
  heroku: circleci/heroku@0.0.8
  cypress: cypress-io/cypress@1.11.0
jobs:
  setup-client:
    docker:
      - image: circleci/node:10
    working_directory: ~/memento/
    steps:
      - checkout
      - attach_workspace:
          at: ~/memento/
      # Restore dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "client/package.json" }}
            # Fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install all needed dependencies from package.json
      - run:
          name: Install React Dependencies
          command: npm i --prefix client

      # Save the cache including node_modules folder
      - save_cache:
          paths:
            - client/node_modules
          key: v1-dependencies-{{ checksum "client/package.json" }}
      - persist_to_workspace:
          root: ~/memento/client
          paths:
            - node_modules
  build-client:
    docker:
      - image: circleci/node:10
    working_directory: ~/memento/
    steps:
      - checkout
      - attach_workspace:
          at: ~/memento/client
      - run:
          working_directory: client
          name: Print Client
          command: ls -l
      # Run React build
      - run:
          name: React Build
          command: npm run build --prefix client
      - persist_to_workspace:
          root: ~/memento/client
          paths:
            - build
  setup-backend:
    docker:
      - image: circleci/node:10
    working_directory: ~/memento/
    steps:
      - checkout
      - attach_workspace:
          at: ~/memento/
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      # Install all needed dependencies from package.json
      - run:
          name: Install Node JS + Express Dependencies
          command: npm i
      # Save the cache including node_modules folder
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}\
      - persist_to_workspace:
          root: ~/memento/
          paths:
            - node_modules
  test-backend:
    docker:
      - image: circleci/node:8
    working_directory: ~/memento/
    steps:
      - checkout
      - attach_workspace:
          at: ~/memento/
      # Run Jest Tests
      - run:
          name: Run Jest Tests
          command: npm run test

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - cypress/install:
          # run a custom app build step
          build: "npm run build"
      - cypress/run:
          # make sure app has been installed and built
          # before running tests across multiple machines
          # this avoids installing same dependencies 10 times
          requires:
            - cypress/install
          record: true # record results on Cypress Dashboard
          parallel: true # split all specs across machines
          parallelism: 4 # use 4 CircleCI machines to finish quickly
          group: "all tests" # name this group "all tests" on the dashboard
          start: "npm start" # start server before running tests
      - setup-backend:
      - setup-client:
          filters:
            branches:
              only:
                - master
                - develop
      - setup-backend:
          filters:
            branches:
              only:
                - master
                - develop
      - build-client:
          requires:
            - setup-client
          filters:
            branches:
              only:
                - master
                - develop
      - test-backend:
          requires:
            - setup-backend
          filters:
            branches:
              only:
                - master
                # - develop
      - heroku/deploy-via-git:
          requires:
            - build-client
          filters:
            branches:
              only:
                - master
                - develop
